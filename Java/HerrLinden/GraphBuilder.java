/*
package HerrLinden;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

import javax.swing.JFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class GraphBuilder {
    public static void main(String[] args) {
        String csvFile = "result1.csv";  // CSV file generated by your simulation
        
        // Create XYSeries for each parameter
        XYSeries accelerationSeries = new XYSeries("Acceleration");
        XYSeries velocitySeries = new XYSeries("Velocity");
        XYSeries heightSeries = new XYSeries("Height");
        
        // Read the CSV file and parse the data
        try (BufferedReader br = new BufferedReader(new FileReader(csvFile))) {
            String line = br.readLine(); // Read header line: Time(t),Acceleration(a),Velocity(v),Height(x)
            while ((line = br.readLine()) != null) {
                String[] tokens = line.split(",");
                if (tokens.length < 4)
                    continue;
                double time = Double.parseDouble(tokens[0]);
                double acceleration = Double.parseDouble(tokens[1]);
                double velocity = Double.parseDouble(tokens[2]);
                double height = Double.parseDouble(tokens[3]);
                
                accelerationSeries.add(time, acceleration);
                velocitySeries.add(time, velocity);
                heightSeries.add(time, height);
            }
        } catch (IOException e) {
            System.err.println("Error reading CSV file: " + e.getMessage());
            return;
        }
        
        // Create datasets for each subplot
        XYSeriesCollection accelerationDataset = new XYSeriesCollection();
        accelerationDataset.addSeries(accelerationSeries);
        XYSeriesCollection velocityDataset = new XYSeriesCollection();
        velocityDataset.addSeries(velocitySeries);
        XYSeriesCollection heightDataset = new XYSeriesCollection();
        heightDataset.addSeries(heightSeries);
        
        // Create subplots
        NumberAxis rangeAxis1 = new NumberAxis("Acceleration (a)");
        XYPlot subplot1 = new XYPlot(accelerationDataset, null, rangeAxis1, new StandardXYItemRenderer());
        subplot1.setDomainGridlinesVisible(true);
        
        NumberAxis rangeAxis2 = new NumberAxis("Velocity (v)");
        XYPlot subplot2 = new XYPlot(velocityDataset, null, rangeAxis2, new StandardXYItemRenderer());
        subplot2.setDomainGridlinesVisible(true);
        
        NumberAxis rangeAxis3 = new NumberAxis("Height (x)");
        XYPlot subplot3 = new XYPlot(heightDataset, null, rangeAxis3, new StandardXYItemRenderer());
        subplot3.setDomainGridlinesVisible(true);
        
        // Create a shared x-axis for time
        NumberAxis domainAxis = new NumberAxis("Time (t)");
        
        // Combine the subplots into a single plot with a shared time axis
        CombinedDomainXYPlot combinedPlot = new CombinedDomainXYPlot(domainAxis);
        combinedPlot.add(subplot1, 1);
        combinedPlot.add(subplot2, 1);
        combinedPlot.add(subplot3, 1);
        combinedPlot.setGap(10.0);
        
        // Create the chart with a title and the combined plot
        JFreeChart chart = new JFreeChart("Results vs Time", JFreeChart.DEFAULT_TITLE_FONT, combinedPlot, true);
        
        // Display the chart in a JFrame
        ChartPanel chartPanel = new ChartPanel(chart);
        JFrame frame = new JFrame("Graph");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.add(chartPanel);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }
}
    */